# vim: set sw=2 ts=2 softtabstop=2 expandtab:
runner: MathSat5
runner_config:
  # This is the tool_path inside the container
  tool_path: "/home/user/mathsat/bin/mathsat"
  max_memory: 10240 # 10 GiB
  max_time: 900 # 15 minutes
  additional_args:
    - "-input=smt2"
    # I'm paranoid. Fix the random seed
    - "-random_seed=1"
    # Need the new SMT-LIBv2.6 semantics for division
    - "-theory.bv.div_by_zero_mode=0"
    # Options are taken from "configurations/smtcomp2015_main.txt"
    # that is included with MathSAT5 distribution. These are options
    # are for QF_FP/QF_BVFP/QF_FPBV
    - "-preprocessor.toplevel_propagation=true"
    - "-preprocessor.simplification=1"
    - "-dpll.branching_random_frequency=0.01"
    - "-dpll.branching_random_invalidate_phase_cache=true"
    - "-dpll.restart_strategy=3"
    - "-dpll.glucose_var_activity=true"
    - "-dpll.glucose_learnt_minimization=true"
    - "-dpll.preprocessor.mode=1"
    - "-theory.bv.eager=true"
    - "-theory.bv.bit_blast_mode=2"
    - "-theory.bv.delay_propagated_eqs=true"
    - "-theory.arr.mode=1"
    - "-theory.la.enabled=false"
    - "-theory.eq_propagation=false"
    - "-theory.fp.mode=1"
    - "-theory.fp.bit_blast_mode=2"
    - "-theory.fp.bv_combination_enabled=true"
    - "-theory.arr.enabled=false"
  backend:
    name: "Docker"
    config:
      # MathSAT5 5.5.1 Docker image
      image: "mathsat_build:ubuntu1604_5_5_1"
      skip_tool_check: True # Faster
      # Use same UID/GID inside container as outside so the container
      # can write to our files.
      user: "$HOST_USER"
      docker_stats_on_exit_shim: true
      resource_pinning:
        # mars has 16 real cores.
        # systemd should be configured that init is pinned to cpus 0 and 2
        #
        # This leaves cpus 1,3-15 free for our jobs. Don't use 1 to try to reduce load
        cpu_ids: [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] # Max 13 jobs possible
        cpus_per_job: 1 # each solver run gets a single cpu
        # make sure each job only uses the nearest numa memset to try to avoid
        # noise created by memory latency.
        use_memset_of_nearest_node: true
      memory_swappiness: 1 # Limit swapping as much as possible but without completely disabling it
      # Try to avoid stdout being dropped
      stdout_and_stderr_bypass: true

