From e5585dae526325987f95aa52918c5e777ec6aace Mon Sep 17 00:00:00 2001
From: REDACTED
Date: Sun, 11 Feb 2018 17:07:39 +0000
Subject: [PATCH] Tweak LibFuzzer's `MutationDispatcher::Mutate_CopyPart`
 mutation.

It doesn't make sense to non-deterministically choose between CopyPart
and InsertPart when it is known that InsertPart will fail.
---
 runtime/LibFuzzer/Fuzzer/FuzzerMutate.cpp                             | 4 +++-
 .../Fuzz/sat/2017-09-02-float-constant-regression.smt2                | 2 +-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/runtime/LibFuzzer/Fuzzer/FuzzerMutate.cpp b/runtime/LibFuzzer/Fuzzer/FuzzerMutate.cpp
index 9ee5299..7472126 100644
--- a/runtime/LibFuzzer/Fuzzer/FuzzerMutate.cpp
+++ b/runtime/LibFuzzer/Fuzzer/FuzzerMutate.cpp
@@ -339,7 +339,9 @@ size_t MutationDispatcher::InsertPartOf(const uint8_t *From, size_t FromSize,
 size_t MutationDispatcher::Mutate_CopyPart(uint8_t *Data, size_t Size,
                                            size_t MaxSize) {
   if (Size > MaxSize || Size == 0) return 0;
-  if (Rand.RandBool())
+  // FIXME: Upstream this change. If Size == MaxSize, InsertPartOf will
+  // fail so there's no point using it in that case.
+  if (Size == MaxSize || Rand.RandBool())
     return CopyPartOf(Data, Size, Data, Size);
   else
     return InsertPartOf(Data, Size, Data, Size, MaxSize);
diff --git a/tests/system_tests/CXXFuzzingBackend/Fuzz/sat/2017-09-02-float-constant-regression.smt2 b/tests/system_tests/CXXFuzzingBackend/Fuzz/sat/2017-09-02-float-constant-regression.smt2
index d9151db..7542c98 100644
--- a/tests/system_tests/CXXFuzzingBackend/Fuzz/sat/2017-09-02-float-constant-regression.smt2
+++ b/tests/system_tests/CXXFuzzingBackend/Fuzz/sat/2017-09-02-float-constant-regression.smt2
@@ -1,4 +1,4 @@
-; RUN: %jfs -cxx -max-time=3 %s | %FileCheck %s
+; RUN: %jfs -cxx -max-time=5 %s | %FileCheck %s
 (declare-fun a () (_ FloatingPoint 8 24))
 (declare-fun b () (_ FloatingPoint 8 24))
 (assert (fp.eq a (fp #b0 #x86 #b00000000000000000000000)))
-- 
2.16.2

